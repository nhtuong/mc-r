system.time(ge.data.or<-read.table(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),sep="\t",header=T,dec = ","))
system.time(ge.data.or<-read.table.mc(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),sep="\t",header=T,dec = ","))
system.time(ge.data.or<-read.table.mc(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),sep="\t",header=T))
system.time(ge.data.or<-read.table(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),sep="\t",header=T,dec = ",",stringsAsFactors=F))
system.time(ge.data.or.nor<-read.table(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),sep="\t",header=T,dec = ","))
head(ge.data.or.nor)
head(ge.data.or)
system.time(ge.data<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F))
system.time(ge.data<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ","))
head(ge.data.opt)
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F))
head(ge.data)
head(ge.data.opt)
head(ge.data) == head(ge.data.opt)
head(ge.data,10) == head(ge.data.opt,10)
head(ge.data) == head(ge.data.opt)
save(ge.data,file=sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir))
save(ge.data.opt,file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir))
system.time(save(ge.data,file=sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir)))
system.time(save(ge.data.opt,file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir)))
system.time(save(ge.data,file=sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir)))
system.time(save(ge.data.opt,file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir)))
dim(ge.data.opt)
dim(ge.data)
size(sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir))
file.info(sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir))
file.info("file")$size
file.info(sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir))$size
file.info(sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir))$size
ge.data+3
ge.data.opt+3
ge.data.opt
ge.data.opt+3
ge.data+3
class(ge.data.opt)
class(ge.data)
class(ge.data.opt[,1])
class(ge.data[,1])
head(ge.data) == head(ge.data.opt)
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F))
head(ge.data) == head(ge.data.opt)
head(ge.data.opt)
head(ge.data.opt)+3
data.matrix(head(ge.data.opt))+3
data.matrix(head(ge.data.opt))
data.matrix(ge.data.opt)+3
tmp<-data.matrix(ge.data.opt)
tmp+3
ge.data+3
system.time(ge.data+3)
system.time(tmp+3)
system.time(tmp+3)
system.time(ge.data+3)
system.time(tmp+3)
system.time(tmp+3)
tmp2<-as.data.frame(ge.data.opt)
tmp2+3
?read.table
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F,colClasses="numeric"))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F,as.is=T))
ge.data.opt+3
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F,as.is=F))
ge.data.opt+3
dim(ge.data)
read.table.mc<-function(file,header=FALSE,sep="",dec=",",nrow=-1){
#read 5 first rows to get class names of column
tab5rows <- read.table(file, nrows = 5,sep=sep)
#get class names
classes <- sapply(tab5rows, class)
#get data frame with specific parameter
tabAll <- read.table(file,  header=header, stringsAsFactors=F, colClasses=classes,sep=sep,nrows=nrow,comment.char = "")
return(tabAll)
}
system.time(ge.data.opt<-read.table.mc(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ","))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F,colClasses=rep("numeric",153)))
colClasses=rep("numeric",153)
colClasses
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",colClasses=rep("numeric",153)))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
header=T,colClasses=rep("numeric",153)))
dim(ge.data.opt)
read.table.mc<-function(file,header=FALSE,sep="",dec=",",nrow=-1){
#read 5 first rows to get class names of column
tab5rows <- read.table(file, nrows = 5,sep=sep)
#get class names
classes <- sapply(tab5rows, class)
#get data frame with specific parameter
tabAll <- read.table(file,  header=header,  colClasses=classes)
return(tabAll)
}
system.time(ge.data.opt<-read.table.mc(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
header=T))
read.table.mc<-function(file,header=FALSE,sep="",dec=",",nrow=-1){
#read 5 first rows to get class names of column
sampleData <- read.csv(file, header = TRUE, nrows = 5)
classes <- sapply(sampleData, class)
#get data frame with specific parameter
tabAll <- read.table(file, colClasses=classes)
return(tabAll)
}
sep="\t",header=T,dec = ","))
system.time(ge.data.opt<-read.table.mc(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
header=T))
as.numeric.mat.mc(ge.data.opt)
as.numeric.mat.mc<-function(data,dec=","){
rn<-rownames(data)
cn<-colnames(data)
data<-data.frame(sapply(1:ncol(data),function(x) type.convert(as.character(data[,x]),dec=dec)))
rownames(data)<-rn
colnames(data)<-cn
return(data)
}
as.numeric.mat.mc(ge.data.opt)
read.table.mc<-function(file,header=FALSE,sep="",dec=",",nrow=-1){
#read 5 first rows to get class names of column
sampleData <- read.csv(file, header = FALSE, nrows = 5)
classes <- sapply(sampleData, class)
#get data frame with specific parameter
tabAll <- read.table(file, colClasses=classes)
return(tabAll)
}
system.time(ge.data.opt<-read.table.mc(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
header=T))
head(ge.data)
dim(ge.data)
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",colClasses=c("character",rep("numeric",152))))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=F,dec = ",",colClasses=c("character",rep("numeric",152))))
as.data.frame
?as.data.frame
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F))
ge.data.opt<-data.matrix(ge.data.opt)
system.time(ge.data.opt<-data.matrix(ge.data.opt))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F))
system.time(ge.data.opt<-data.matrix(ge.data.opt))
head(ge.data.opt)
head(ge.data)
library(sqldf)
install.packages("sqldf")
library(sqldf)
f <- file(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),)
system.time(bigdf <- sqldf("select * from f", dbname = tempfile(), file.format = list(header = T, row.names = F)))
head(bigdf)
system.time(bigdf <- sqldf("select * from f", dbname = tempfile(), file.format = list(sep="\t",header=T,dec = ",")))
head(bigdf)
f <- file(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),)
system.time(bigdf <- sqldf("select * from f", dbname = tempfile(), file.format = list(sep="\t",header=T,dec = ",")))
bigdf+3
?sqldf
system.time(bigdf <- sqldf("select * from f", stringsAsFactors=T, dbname = tempfile(), file.format = list(sep="\t",header=T,dec = ",")))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F,colClasses=c("character","character",rep("numeric",151))))
datalist <- scan(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),sep='\t',list(url='',popularity=0,mintime=0,maxtime=0)))
datalist <- scan(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),sep='\t',list(url='',popularity=0,mintime=0,maxtime=0))
install.packages("RSQLite")
install.packages("RSQLite")
library(RSQLite)
# Create/Connect to a database
con <- dbConnect("SQLite", dbname = "sample_db.sqlite")
# read csv file into sql database
# Warning: this is going to take some time and disk space,
#   as your complete CSV file is transferred into an SQLite database.
dbWriteTable(con, name="sample_table", value=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
row.names=FALSE, header=TRUE, sep = ",")
# Query your data as you like
yourData <- dbGetQuery(con, "SELECT * FROM sample_table LIMIT 10")
head(yourData)
# Create/Connect to a database
con <- dbConnect("SQLite", dbname = "sample_db.sqlite")
# read csv file into sql database
# Warning: this is going to take some time and disk space,
#   as your complete CSV file is transferred into an SQLite database.
dbWriteTable(con, name="sample_table", value=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
row.names=FALSE, header=TRUE, sep = "\t")
# Query your data as you like
yourData <- dbGetQuery(con, "SELECT * FROM sample_table LIMIT 10")
dbDisconnect(con)
head(yourData)
# Create/Connect to a database
con <- dbConnect("SQLite", dbname = "sample_db.sqlite")
# read csv file into sql database
# Warning: this is going to take some time and disk space,
#   as your complete CSV file is transferred into an SQLite database.
dbWriteTable(con, name="sample_table", value=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",")
# Query your data as you like
yourData <- dbGetQuery(con, "SELECT * FROM sample_table LIMIT 10")
dbDisconnect(con)
yourData
as.data.frame
?as.data.frame
?data.frame
con <- dbConnect("SQLite", dbname = "sample_db.sqlite")
# read csv file into sql database
# Warning: this is going to take some time and disk space,
#   as your complete CSV file is transferred into an SQLite database.
dbWriteTable(con, name="sample_table", value=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",")
# Query your data as you like
yourData <- dbGetQuery(con, "SELECT * FROM sample_table")
dbDisconnect(con)
yourData
dbWriteTable(con, name="sample_table", value=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T)
# Create/Connect to a database
con <- dbConnect("SQLite", dbname = "sample_db.sqlite")
# read csv file into sql database
# Warning: this is going to take some time and disk space,
#   as your complete CSV file is transferred into an SQLite database.
dbWriteTable(con, name="sample_table", value=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T)
# Query your data as you like
yourData <- dbGetQuery(con, "SELECT * FROM sample_table")
dbDisconnect(con)
head(yourData)
f <- file(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir))
system.time(bigdf <- sqldf("select * from f", stringsAsFactors=T, dbname = tempfile(), file.format = list(sep="\t",header=T,dec = ",")))
library(sqldf)
f <- file(sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir))
system.time(bigdf <- sqldf("select * from f", stringsAsFactors=T, dbname = tempfile(), file.format = list(sep="\t",header=T,dec = ",")))
system.time(ge.data<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ","))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ",",stringsAsFactors=F))
head(ge.data.opt)
ge.data.opt[,3]
ge.data.opt[,3]+3
ge.data.opt[,4]+3
ge.data.opt[,5]+3
ge.data.opt[,4]
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ".",stringsAsFactors=F))
ge.data.opt[,4]
ge.data.opt[,4]+3
as.numeric(ge.data.opt[,4])+3
as.numeric(ge.data.opt)+3
ge.data.opt+3
ge.data.opt[,4:30]+3
type.convert(ge.data.opt)
as.numeric.mat.mc<-function(data,dec=","){
rn<-rownames(data)
cn<-colnames(data)
data<-data.frame(sapply(1:ncol(data),function(x) type.convert(as.character(data[,x]),dec=dec)))
rownames(data)<-rn
colnames(data)<-cn
return(data)
}
as.numeric.mat.mc(ge.data.opt)
data.matrix(ge.data.opt)
system.time(data.matrix(ge.data.opt))
system.time(ge.data<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ","))
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ".",stringsAsFactors=F))
system.time(data.matrix(ge.data.opt[,-(1,2)]))
system.time(data.matrix(ge.data.opt[,-c(1,2)]))
system.time(ge.data.opt.num<-data.matrix(ge.data.opt[,-c(1,2)]))
head(ge.data.opt.num)
head(ge.data.opt.num)+4
system.time(ge.data.opt.num+4)
system.time(ge.data+4)
system.time(ge.data+4)
system.time(ge.data+4)
system.time(ge.data+4)
system.time(ge.data+4)
system.time(ge.data.opt.num+4)
system.time(ge.data.opt.num+4)
system.time(ge.data.opt.num+4)
system.time(ge.data.opt.num+4)
system.time(ge.data.opt.num+4)
system.time(ge.data.opt.num+ge.data.opt.num)
system.time(ge.data.opt.num*ge.data.opt.num)
system.time(ge.data.opt.num*ge.data.opt.num)
system.time(ge.data*ge.data)
system.time(ge.data*ge.data)
system.time(ge.data*ge.data)
system.time(ge.data*ge.data)
system.time(ge.data*ge.data)
system.time(ge.data*ge.data)
system.time(ge.data.opt.num+ge.data.opt.num)
system.time(ge.data.opt.num+ge.data.opt.num)
system.time(ge.data.opt.num+ge.data.opt.num)
system.time(ge.data.opt.num+ge.data.opt.num)
system.time(ge.data*ge.data)
system.time(ge.data*ge.data)
class(ge.data.opt.num[,1])
system.time(save(data.frame(cbind(ge.data.opt[,1:2],ge.data.opt.num)),file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir)))
ge.data.opt.df<-data.frame(cbind(ge.data.opt[,1:2],ge.data.opt.num))
system.time(save(ge.data.opt.df,file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir)))
install.packages("plyr")
set.seed(42)
df <- data.frame(x = rep(1:10,each=5), y = rnorm(50))
#calculate mean, min and max for each x-value
library(plyr)
df2 <- ddply(df,.(x),function(df) c(mean=mean(df$y),min=min(df$y),max=max(df$y)))
#plot error bars
library(Hmisc)
with(df2,errbar(x,mean,max,min))
grid(nx=NA,ny=NULL)
set.seed(42)
df <- data.frame(x = rep(1:10,each=5), y = rnorm(50))
#calculate mean, min and max for each x-value
library(plyr)
df2 <- ddply(df,.(x),function(df) c(mean=mean(df$y),min=min(df$y),max=max(df$y)))
#plot error bars
library(Hmisc)
with(df2,errbar(x,mean,max,min))
grid(nx=NA,ny=NULL)
df
plot(df)
df <- data.frame(x = 1:4, y = rnorm(5))
df <- data.frame(x = c(1:4), y = rnorm(5))
c(1:4)
rnorm(5)
df <- data.frame(x = c(1:4), y = rnorm(5))
df <- data.frame(x = c(1:4), y = rnorm(4))
plot(df)
err<- c(0.21,0.1,0.21,0.301)
errbar(x,mean,max,min)
#plot error bars
library(Hmisc)
with(df2,errbar(x,mean,max,min))
grid(nx=NA,ny=NULL)
set.seed(1)
x <- 1:10
y <- x + rnorm(10)
delta <- runif(10)
errbar( x, y, y + delta, y - delta )
plot(df)
errbar( x, y, y + err, y - err )
x = c(1:4)
y = rnorm(4)
df <- data.frame(x,y)
err<- c(0.21,0.1,0.21,0.301)
plot(df)
#plot error bars
library(Hmisc)
errbar( x, y, y + err, y - err )
states.str='"State","Abbreviation"
+ "Alabama","AL"
+ "Alaska","AK"
+ "Arizona","AZ"
+ "Arkansas","AR"
+ "California","CA"'
read.csv(text=states.str)
states.str='weight_clin_kg  0.0478248992803557	-0.180296251940069
heigh_clin_m	0.00837619560964395	-0.238686248950517
BMI_clin_kg.per.m	0.0125412371856501	-0.22635368362385
waist.circumference_clin_cm	0.549817336579434	0.0548955119268535
hip.circumference_clin_cm	0.01283503630644	0.225627426819485
fatmass_clin_kg	0.541052060314256	-0.056104284109249
fatmass_clin_percent	0.953566488382573	0.00534900019405522
fatfreemass_clin_kg	0.285016271577298	0.0979755232667659'
read.csv(text=states.str)
read.csv(text=states.str,sep="\t")
read.csv(text='weight_clin_kg  0.0478248992803557  -0.180296251940069
heigh_clin_m	0.00837619560964395	-0.238686248950517
BMI_clin_kg.per.m	0.0125412371856501	-0.22635368362385
waist.circumference_clin_cm	0.549817336579434	0.0548955119268535
hip.circumference_clin_cm	0.01283503630644	0.225627426819485
fatmass_clin_kg	0.541052060314256	-0.056104284109249
fatmass_clin_percent	0.953566488382573	0.00534900019405522
fatfreemass_clin_kg	0.285016271577298	0.0979755232667659',sep="\t")
read.csv(text="weight_clin_kg  0.0478248992803557  -0.180296251940069
heigh_clin_m	0.00837619560964395	-0.238686248950517
BMI_clin_kg.per.m	0.0125412371856501	-0.22635368362385
waist.circumference_clin_cm	0.549817336579434	0.0548955119268535
hip.circumference_clin_cm	0.01283503630644	0.225627426819485
fatmass_clin_kg	0.541052060314256	-0.056104284109249
fatmass_clin_percent	0.953566488382573	0.00534900019405522
fatfreemass_clin_kg	0.285016271577298	0.0979755232667659",sep="\t")
lines(df)
?Startup
class(ge.data[,5])
class(ge.data.opt[,5])
class(ge.data[,5])
ge.data+1
head(ge.data)+1
head(ge.data.opt)+1
system.time(ge.data.opt.num<-data.matrix(ge.data.opt))
head(ge.data.opt.num)+1
head(ge.data)+1
head(ge.data.opt.num)+1
system.time(ge.data.opt<-read.table(file=sprintf("%s/ADIPOSE-GENES/data.d.all.txt",input.dir),
sep="\t",header=T,dec = ".",stringsAsFactors=F))
system.time(ge.data.opt.num<-data.matrix(ge.data.opt))
head(ge.data.opt.num)==head(ge.data)
system.time(save(ge.data,file=sprintf("%s/ADIPOSE-GENES/data.d.all.rda",input.dir)))
system.time(save(ge.data.opt.df,file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.rda",input.dir)))
system.time(save(ge.data.opt.num,file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.rda",input.dir)))
dim(ge.data)
dim(ge.data.opt.num)
head(ge.data.opt)==head(ge.data)
ge.data<-get(load(file=sprintf("%s/ADIPOSE-GENES/data.d.all.rda",input.dir)))
system.time(ge.data<-get(load(file=sprintf("%s/ADIPOSE-GENES/data.d.all.rda",input.dir))))
system.time(ge.data.opt<-get(load(file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.rda",input.dir))))
#save to R native data
system.time(save(ge.data,file=sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir)))
system.time(save(ge.data.opt.num,file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir)))
system.time(ge.data<-get(load(file=sprintf("%s/ADIPOSE-GENES/data.d.all.RData",input.dir))))
system.time(ge.data.opt<-get(load(file=sprintf("%s/ADIPOSE-GENES/data.d.all.opt.RData",input.dir))))
rownames(ge.data)<-ge.data[,1]
rownames(ge.data.opt)<-ge.data.opt[,1]
plot.err.mc<-function(x,y,err,xlab="x",ylab="y",title="")
df <- data.frame(x,y)
plot(df,xlab=xlab,ylab=ylab,title=title)
errbar( x, y, y + err, y - err )
lines(df)
}
plot.err.mc<-function(x,y,err,xlab="x",ylab="y",title=""){
df <- data.frame(x,y)
plot(df,xlab=xlab,ylab=ylab,title=title)
errbar( x, y, y + err, y - err )
lines(df)
}
x = c(1:4)
y = rnorm(4)
df <- data.frame(x,y)
err<- c(0.21,0.1,0.21,0.301)
plot.err.mc(x,y,err)
x = c(1:4)
y = rnorm(4)
err<- c(0.21,0.1,0.21,0.301)
plot.err.mc(x,y,err)
dat <- matrix(runif(40,1,20),ncol=4) # make data
matplot(dat, type = c("b"),pch=1,col = 1:4) #plot
legend("topleft", legend = 1:4, col=1:4, pch=1) # optional legend
dat
plot(0,0,xlim = c(-10,10),ylim = c(-10,10),type = "n")
plot(x=0,y=0,xlim = c(-10,10),ylim = c(-10,10),type = "n")
plot(NA,xlim = c(-10,10),ylim = c(-10,10),type = "n")
plot(x=0,y=0,xlim = c(-10,10),ylim = c(-10,10),type = "n")
df
dat <- matrix(runif(40,1,20),ncol=4) # make data
dat
matrix
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(min(df),max(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(5)
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(-10:10,df[,x],col = cl[i],type = 'b'))
sapply(1:ncol(df),function(x)
lines(-10:10,df[,c(1,x)],col = cl[i],type = 'b'))
df[,c(1,1)]
df
runif(21,-10,10)
sapply(1:ncol(df),function(x)
lines(1:ncol(df),df[,x],col = cl[i],type = 'b'))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[i],type = 'b'))
plot(0,0,xlim = c(min(df),max(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b'))
max(df)
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(min(df),max(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b'))
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(0,nrow(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b'))
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(0,nrow(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b',pch=1:nrow(df)))
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(0,nrow(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b',pch=1:1:ncol(df))
)
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(0,nrow(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b',pch=1:ncol(df)))
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(0,nrow(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b',pch=1))
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(0,nrow(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b',pch=x))
legend("topleft", legend = 1:ncol(df), col=cl, pch=1:ncol(df)) # optional legend
df <- matrix(runif(40,1,20),ncol=4) # make data
plot(0,0,xlim = c(0,nrow(df)),ylim = c(min(df),max(df)),type = "n")
cl <- rainbow(ncol(df))
sapply(1:ncol(df),function(x)
lines(1:nrow(df),df[,x],col = cl[x],type = 'b',pch=x))
legend("topleft", legend = 1:ncol(df), col=cl, pch=1:ncol(df)) # optional legend
